10)

1. 
EXPLAIN ANALYZE SELECT
	housings.id,
	address,
	complex_id,
	complexes.name,
	housings.photo_id
FROM housings
	JOIN complexes
		ON housings.complex_id = complexes.id
	WHERE complexes.name = 'mi'
	

                                                   QUERY PLAN
----------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.27..6.55 rows=2 width=46) (actual time=0.054..0.073 rows=3 loops=1)
   Hash Cond: (housings.complex_id = complexes.id)
   ->  Seq Scan on housings  (cost=0.00..3.00 rows=100 width=34) (actual time=0.006..0.016 rows=100 loops=1)
   ->  Hash  (cost=3.25..3.25 rows=2 width=16) (actual time=0.028..0.028 rows=2 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on complexes  (cost=0.00..3.25 rows=2 width=16) (actual time=0.007..0.022 rows=2 loops=1)
               Filter: ((name)::text = 'mi'::text)
               Rows Removed by Filter: 98
 Planning Time: 0.157 ms
 Execution Time: 0.094 ms
(10 rows)

2.
SET enable_seqscan TO OFF;
CREATE INDEX complexes_name_idx ON complexes (name);


                                                              QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=10000000006.21..10000000009.48 rows=2 width=46) (actual time=93.190..93.200 rows=3 loops=1)
   Hash Cond: (housings.complex_id = complexes.id)
   ->  Seq Scan on housings  (cost=10000000000.00..10000000003.00 rows=100 width=34) (actual time=0.009..0.014 rows=100 loops=1)
   ->  Hash  (cost=6.18..6.18 rows=2 width=16) (actual time=93.170..93.171 rows=2 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Bitmap Heap Scan on complexes  (cost=4.16..6.18 rows=2 width=16) (actual time=93.161..93.164 rows=2 loops=1)
               Recheck Cond: ((name)::text = 'mi'::text)
               Heap Blocks: exact=1
               ->  Bitmap Index Scan on complexes_name_idx  (cost=0.00..4.16 rows=2 width=0) (actual time=0.009..0.009 rows=2 loops=1)
                     Index Cond: ((name)::text = 'mi'::text)
 Planning Time: 0.160 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.592 ms, Inlining 5.352 ms, Optimization 55.689 ms, Emission 31.966 ms, Total 94.599 ms
 Execution Time: 94.841 ms
(16 rows)

3.
Видим проблему Seq Scan on housings  (cost=10000000000.00..10000000003.00 rows=100 width=34)
CREATE INDEX housings_complex_id_idx ON housings (complex_id);

                                                               QUERY PLAN
-----------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=4.30..22.58 rows=2 width=46) (actual time=0.022..0.028 rows=3 loops=1)
   ->  Bitmap Heap Scan on complexes  (cost=4.16..6.18 rows=2 width=16) (actual time=0.014..0.016 rows=2 loops=1)
         Recheck Cond: ((name)::text = 'mi'::text)
         Heap Blocks: exact=1
         ->  Bitmap Index Scan on complexes_name_idx  (cost=0.00..4.16 rows=2 width=0) (actual time=0.008..0.008 rows=2 loops=1)
               Index Cond: ((name)::text = 'mi'::text)
   ->  Index Scan using housings_complex_id_idx on housings  (cost=0.14..8.18 rows=2 width=34) (actual time=0.003..0.004 rows=2 loops=2)
         Index Cond: (complex_id = complexes.id)
 Planning Time: 0.184 ms
 Execution Time: 0.056 ms
(10 rows)

4. Проблема устранена, но для данной размерности лучше вернуть всё как было (SET enable_seqscan TO ON);